type Query {
  me: UserType!
  health: HealthType!
  parking: [ParkingType]!
}

type UserType {
  identifier: UserID!
  name: String!
  email: String!
}

scalar UserID

type HealthType {
  status: String!
  time: DateTime!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type ParkingType {
  identifier: ParkingID!
  name: String!
  address: String!
  totalLots: Int!
  occupiedLots: Int!
}

scalar ParkingID

type Mutation {
  createParking(address: String!, name: String!, totalLots: Int!): CreateParkingMutation!
  createUser(email: String!, name: String!, password: String!): CreateUserMutation!
  loginUser(email: String!, password: String!): LoginUserMutation!
}

type CreateParkingMutation {
  parking: ParkingType!
}

type CreateUserMutation {
  user: UserType!
}

type LoginUserMutation {
  token: String!
}